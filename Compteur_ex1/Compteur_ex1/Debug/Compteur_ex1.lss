
Compteur_ex1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000010c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000010c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000013c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005b8  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000051c  00000000  00000000  00000760  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000219  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f5  00000000  00000000  00000edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  000011d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <setupGPIO>:
}


/** Configuration PORTC en sortie **/
void setupGPIO(){
	DDRC |= 0x01;
  6c:	84 b3       	in	r24, 0x14	; 20
  6e:	81 60       	ori	r24, 0x01	; 1
  70:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  72:	15 ba       	out	0x15, r1	; 21
  74:	08 95       	ret

00000076 <setupTimer>:
}

/**	Configuration TIMER1 (16Bit)=65536 **/
void setupTimer(){
	DDRD |= (1 << PIND5); //PIN OC1A en OUTPUT
  76:	81 b3       	in	r24, 0x11	; 17
  78:	80 62       	ori	r24, 0x20	; 32
  7a:	81 bb       	out	0x11, r24	; 17
	TCCR1A |= (1 << COM1A0); //Sortie PIN OC1A en mode Bascule ON/OFF .   
  7c:	8f b5       	in	r24, 0x2f	; 47
  7e:	80 64       	ori	r24, 0x40	; 64
  80:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12); //Fixer Mode CTC en interne et le signal de sortie.
  82:	8e b5       	in	r24, 0x2e	; 46
  84:	88 60       	ori	r24, 0x08	; 8
  86:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << CS11) | ( 1<< CS10); //Config prescalaire en 1MHZ/64 = 15625Hz
  88:	8e b5       	in	r24, 0x2e	; 46
  8a:	83 60       	ori	r24, 0x03	; 3
  8c:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 31248; //Seuil comptage MAX_TOP=2s=2x(MAX-1)
  8e:	80 e1       	ldi	r24, 0x10	; 16
  90:	9a e7       	ldi	r25, 0x7A	; 122
  92:	9b bd       	out	0x2b, r25	; 43
  94:	8a bd       	out	0x2a, r24	; 42
  96:	08 95       	ret

00000098 <main>:
void setupTimer(void);

/**Timer en mode CTC sans interruption, bascule LED1=1s et bascule LED2=2s **/

int main(void){
	setupGPIO();
  98:	0e 94 36 00 	call	0x6c	; 0x6c <setupGPIO>
	setupTimer();
  9c:	0e 94 3b 00 	call	0x76	; 0x76 <setupTimer>
	while(1){
		if ( TCNT1 > 15624 ){
  a0:	8c b5       	in	r24, 0x2c	; 44
  a2:	9d b5       	in	r25, 0x2d	; 45
  a4:	89 30       	cpi	r24, 0x09	; 9
  a6:	9d 43       	sbci	r25, 0x3D	; 61
  a8:	18 f0       	brcs	.+6      	; 0xb0 <main+0x18>
			PORTC = 0x01; //LED ON
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	85 bb       	out	0x15, r24	; 21
  ae:	f8 cf       	rjmp	.-16     	; 0xa0 <main+0x8>
		}else{
			PORTC = 0x00; //LED OFF
  b0:	15 ba       	out	0x15, r1	; 21
  b2:	f6 cf       	rjmp	.-20     	; 0xa0 <main+0x8>

000000b4 <_exit>:
  b4:	f8 94       	cli

000000b6 <__stop_program>:
  b6:	ff cf       	rjmp	.-2      	; 0xb6 <__stop_program>
